<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arduino on Slawomir Slav Jasinski</title><link>/categories/arduino/</link><description>Recent content in Arduino on Slawomir Slav Jasinski</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Jan 2021 15:39:30 +0000</lastBuildDate><atom:link href="/categories/arduino/index.xml" rel="self" type="application/rss+xml"/><item><title>NodeMcu (ESP8266) water level monitor with a voltage sensor</title><link>/nodemcu-esp8266-water-level-monitor-with-a-voltage-sensor/</link><pubDate>Fri, 08 Jan 2021 15:39:30 +0000</pubDate><guid>/nodemcu-esp8266-water-level-monitor-with-a-voltage-sensor/</guid><description>&lt;p>This subject in the theory looks very easy. Just get
&lt;a href="https://en.wikipedia.org/wiki/NodeMCU">NodeMcu&lt;/a>
board, plug sensor from the family of sensors (HY-SRF05, HC-SR04), some kind of voltage sensor and we are good to go. But you can get couple of unexpected issues here. Let’s start from the NodeMcu unit. It’s specific.&lt;/p></description></item><item><title>Arduino double relay keypad lock</title><link>/arduino-double-relay-keypad-lock/</link><pubDate>Wed, 06 Mar 2019 09:00:17 +0000</pubDate><guid>/arduino-double-relay-keypad-lock/</guid><description>I needed key-less way to open my garage door. Quite often I forgot my remote, so just need something easy to open them without remote. Because I have regular “ring type” opener (click and release to open door) needed something to “click” door for me based on something which I remember (not own – remote / key / etc).
Basic idea – keypad + arduino + relay to click the button.</description></item><item><title>USB to TTL / Serial MacOS Mojave</title><link>/usb-to-ttl-serial-macos-mojave/</link><pubDate>Tue, 22 Jan 2019 14:44:50 +0000</pubDate><guid>/usb-to-ttl-serial-macos-mojave/</guid><description>Got a bunch of these little f*ckers and couldn’t make them to work with my Mojave fresh installation. Previously they were working, and now they are gone.
I wasn’t sure what exactly I’ve got. I just run Serial Detect to identify what model do I own:
Then I googled driver for MacOS Mojave. Because original website: CP210x USB to UART Bridge VCP Drivers likes to file, I made a mirror on my server.</description></item><item><title>Talk: from light bulb to Arduino</title><link>/talk-from-light-bulb-to-arduino/</link><pubDate>Wed, 19 Nov 2014 06:08:15 +0000</pubDate><guid>/talk-from-light-bulb-to-arduino/</guid><description>I had opportunity to give a talk small talk about my work with Arduino on Commerce Factory – Nov 2014.
Slides are available here:
www.slideshare.net You can check video here</description></item><item><title>USB to Serial for Mac OS X</title><link>/usb-to-serial-for-mac-os-x/</link><pubDate>Thu, 16 Oct 2014 03:30:14 +0000</pubDate><guid>/usb-to-serial-for-mac-os-x/</guid><description>&lt;p>In this quick tutorial will show how to “talk” quickly to Serial port on Mac OS X.&lt;/p>
&lt;p>Mac OS X will automatically create a serial device, which can be found in /dev.&lt;/p>
&lt;p>Start a terminal session and list all available serial (or tty) devices available.&lt;/p></description></item><item><title>Cheap Arduino clone DccEle – DCcduino Uno</title><link>/cheap-arduino-clone-dccele-dccduino-uno/</link><pubDate>Tue, 02 Sep 2014 05:55:13 +0000</pubDate><guid>/cheap-arduino-clone-dccele-dccduino-uno/</guid><description>&lt;p>Recently I bought very cheaply Arduino UNO Clone called &lt;strong>DccEle – DCcduino UNO&lt;/strong>. Be default It wasn’t recognized by my Mac OS. After a quick google search, I found this
&lt;a href="http://forum.arduino.cc/index.php?topic=261375.0">article&lt;/a>
 which pointed me to proper drivers.&lt;/p></description></item><item><title>Arduino Clock TimeZones and something more</title><link>/arduino-clock-timezones-and-something-more/</link><pubDate>Wed, 04 Dec 2013 00:15:42 +0000</pubDate><guid>/arduino-clock-timezones-and-something-more/</guid><description>&lt;p>Following with my last project –
&lt;a href="/simplest-arduino-clock-with-7-digit-segment-display/" target="_blank" rel="noopener">Arduino clock&lt;/a>
 – i wanted to extend it with 2 features:&lt;/p>
&lt;ol>
&lt;li>Handling daylight saving time,&lt;/li>
&lt;li>Showing up time in different time zone.&lt;/li>
&lt;/ol></description></item><item><title>Simplest Arduino Clock With 7-digit segment display</title><link>/simplest-arduino-clock-with-7-digit-segment-display/</link><pubDate>Sat, 30 Nov 2013 02:10:58 +0000</pubDate><guid>/simplest-arduino-clock-with-7-digit-segment-display/</guid><description>&lt;p>From time to time, I’m also working on less “web” related project. This time, a wanted to play a bit with Arduino platform. The task was pretty simple – to build a clock. Yes – these days, we don’t have enough time measuring devices like mobiles, microwaves, computers – I wanted to build another one.&lt;/p>
&lt;p>It was my first Arduino project so the task wasn’t  as easy as I expected. In the theory, we need only pass time &amp;amp; data from RTC to 7-Segment Display. Simple isn’t it? I found plenty of tutorials, had so many small issues like – digits wasn’t displayed correctly (mixed cables). I could only display one digit at the time in given position or – same digits everywhere (multiplexing). I couldn’t find shift register in my stock, so wanted to use whatever I already had.&lt;/p></description></item></channel></rss>